#include "unity.h"

#include "list.h"
#include "Xstring.c" //Нужно убрать!

void setUp(void)
{
}

void tearDown(void)
{
}

void test_initList(void) {
	pNode list = NULL;
	initList(&list);
	TEST_ASSERT_NULL(list->next);
	TEST_ASSERT_NULL(list->prev);
	TEST_ASSERT_EQUAL_PTR(list->nav->first, list);
	TEST_ASSERT_EQUAL_PTR(list->nav->last, list);
	TEST_ASSERT_NULL(list->value);
}

void test_pushBackList(void) {
	pNode list = NULL;
	pString str = NULL;
	initList(&list);
	initStr(&str);
	addSymbol('T', str);	
	addSymbol('e', str);	
	addSymbol('s', str);	
	addSymbol('t', str);	

	pushBackList(str, list);
	TEST_ASSERT_EQUAL_STRING(list->nav->last->value, "Test");
	TEST_ASSERT_EQUAL_PTR(list->next->prev, list);
	TEST_ASSERT_EQUAL_PTR(list->next, list->nav->last);	
}

void test_atStartList(void) {
	pNode list = NULL;
	pString str = NULL;
	initList(&list);
	initStr(&str);
	addSymbol('T', str);	
	addSymbol('e', str);	
	addSymbol('s', str);	
	addSymbol('t', str);	

	pushBackList(str, list);
	list = list->next;
	atStartList(&list);
	TEST_ASSERT_EQUAL_PTR(list, list->nav->first);
	TEST_ASSERT_NULL(list->prev);
	TEST_ASSERT_NULL(list->value);
}

void test_nextNodeList(void) {
	pNode list = NULL;
	pString str = NULL;
	initList(&list);
	initStr(&str);
	addSymbol('T', str);	
	addSymbol('e', str);	
	addSymbol('s', str);	
	addSymbol('t', str);	

	pushBackList(str, list);

	nextNodeList(&list);
	TEST_ASSERT_EQUAL_STRING(list->value, "Test");
	
	nextNodeList(&list);
	TEST_ASSERT_EQUAL_STRING(list->value, "Test");
}

void test_removeNodesList(void) {
	pNode list = NULL;
	pString str = NULL;
	initList(&list);
	initStr(&str);
	addSymbol('T', str);	
	addSymbol('e', str);	
	addSymbol('s', str);	
	addSymbol('t', str);	

	pushBackList(str, list);
	addSymbol('1', str);
	pushBackList(str, list);

	//Test 1. start = first
	removeNodesList(&list, &(list->next));
	atStartList(&list);
//	TEST_ASSERT_EQUAL_STRING(list->next->next->value, "Test1");


	//Test 2. finish = NULL
	addSymbol('2', str);
	pushBackList(str, list);
	atStartList(&list);
	removeNodesList(&list, NULL);
/*	TEST_ASSERT_EQUAL_PTR(list, list->nav->first);*/
}
